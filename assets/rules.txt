*S -> A1
A1 -> Exp | I | F | W | C | D | IM | FI | Bool | NN | Assign | String | Comment1 | A1;enter;A1 | List | P | R | W
Exp -> Exp;Blank;Op;Blank;Exp | Signint | kbuka1;Blank;Exp;Blank;ktutup1 | Angka | OpPre;Blank2;Exp | Var
Op -> plus | min | div | intdiv | kali | pangkat | mod | gt | lt | bitop | gte | lte | equals | assignment | nequals | Blank2;boolop;Blank2
Int -> number
Float -> Int;dot;Int
Angka -> Int | Float
Signint -> min;Int | plus;Int
Op -> plus | min | div | intdiv | kali | pangkat | mod | gt | lt | gte | lte | equals | assignment | nequals | Blank2;boolop;Blank2 | bitop | bitshifts
OpPre -> not | neg
ListComp1 -> Blank;String;Blank;comma;Blank | ListComp1;ListComp1 | eps
ListComp2 -> Blank;Angka;Blank;comma;Blank | ListComp2;ListComp2 | eps
ListComp3 -> Blank;Var;Blank;comma;Blank | ListComp3;ListComp3 | eps
List -> kbuka2;Blank;ktutup2 | kbuka2;ListComp1;String;ktutup2 | kbuka2;ListComp2;Angka;ktutup2 | kbuka2;ListComp2;Var;ktutup2
Blank -> space | eps | Blank;Blank
Blank2 -> space | Blank2;Blank2
Var -> identifier
VarEps -> Var | eps
String -> string1 | string2 | multiline1 | multiline2
Comment1 -> commentline | multiline1 | multiline2
Bool -> bool
Assign -> Var;assignment;Angka | Var;assignment;Var | Var;assignment;Bool | Var;assignment;List
W -> while;ExpW | while;ExpW;Exp
ExpW -> Blank2;Exp;Blank;colon;Blank
I -> if;ExpW | if;ExpW;enter;tab 
El -> else;Blank;colon
EI -> elif;ExpW
C -> class;Blank2;Var;Blank;KB;Blank;KT;Blank;colon;Blank;enter;tab | class;Blank2;Var;Blank;KB;Blank;KT;Blank;colon;Blank;Exp;Blank
KB -> kbuka1 | eps
KT -> ktutup1 | eps
Ret -> return;kbuka1;RetVal;ktutup1 | return;Blank2;RetVal
RetVal -> Angka | Var | Func
BreakCont -> break | continue
D -> def;Blank2;Var;Blank;kbuka1;VarEps;ktutup1;Blank;colon;Blank;enter;tab | def;Blank2;Var;Blank;kbuka1;VarEps;ktutup1;Blank;colon;Blank;Exp
IM -> import;Blank2;Blank;Var;Blank | import;Blank2;Blank;Var;Blank;Blank2;as;Blank2;Blank;Var;Blank
FI -> from;Blank2;Blank;Var;Blank;Blank2;IM
NN -> none | none;Blank;Exp | Var;Blank;Op;Blank;none | none;Blank;Op;Blank;none
F -> for;Blank2;Var;Blank2;in;Blank2;ExpF1;Blank;colon
ExpF1 -> Var | String | List
ExpF -> kbuka1;Blank;Int;Blank;kbuka2 | kbuka1;Blank;Int;Blank;comma;Blank;Int;Blank;ktutup1 | kbuka1;Blank;Int;Blank;comma;Blank;Int;Blank;comma;Blank;Int;Blank;ktutup1
P -> pass;Blank
R -> raise;Blank
W -> with;Blank2;Func;Blank2;as;Blank2;Func;Blank;colon;Blank;enter | with;Blank2;Var;dot;Func;Blank2;as;Blank2;Var;Blank;colon;Blank;enter
Enter -> eps | enter | enter;enter
Func -> Var;Blank;kbuka1;Arg;ktutup1;Blank
Arg -> String | VarEps